openapi: 3.0.3
info:
  version: 1.0.0
  title: API сервер для проекта «Fit Friends»
  description: Список ресурсов и маршрутов сервера «Fit Friends»

tags:
  - name: user
    description: Пользователь
  - name: workout
    description: Тренировка
  - name: order
    description: Заказ
  - name: food-diary
    description: Дневник питания
  - name: notification
    description: Оповещение
  - name: personal-training
    description: Заявка на персональные тренировки
  - name: review
    description: Отзыв
  - name: sport-gym
    description: Спортивный зал

servers:
  - url: http://localhost:3333/api

paths:
  /auth/register:
    post:
      description: Регистрация пользователя
      tags:
        - user

      requestBody:
        description: Данные для регистрации
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/register_user'

      responses:
        201:
          description: Возвращает данные созданного пользователя
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/user_trainer'
                  - $ref: '#/components/schemas/user_customer'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        409:
          $ref: '#/components/responses/conflict_error'

  /auth/login:
    post:
      description: Авторизация пользователя
      tags:
        - user

      requestBody:
        description: Данные для авторизации
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_user'

      responses:
        200:
          description: Возвращает пару JWT токенов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokens'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        404:
          $ref: '#/components/responses/not_found_error'

  /auth/refresh:
    get:
      description: Обновление пары JWT токенов с помощью refresh_token
      tags:
        - user
      security:
        - BearerAuth: []

      responses:
        200:
          description: Возвращает пару JWT токенов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokens'

        401:
          $ref: '#/components/responses/unauthorized_error'

  /auth/logout:
    get:
      description: Выход из приложения с помощью refresh_token
      tags:
        - user
      security:
        - BearerAuth: []

      responses:
        200:
          description: Успешное удаление refresh_token

        401:
          $ref: '#/components/responses/unauthorized_error'

  /profile:
    get:
      description: Список пользователей для клиента
      tags:
        - user
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/limit_query'
        - $ref: '#/components/parameters/page_query'
        - $ref: '#/components/parameters/sort_type_query'
        - $ref: '#/components/parameters/basic_sort_option_query'

      responses:
        200:
          description: Возвращает информацию о пользователях
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user_customer'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

    patch:
      description: Изменение информации о пользователе
      tags:
        - user
      security:
        - BearerAuth: []

      requestBody:
        description: Информация для изменения
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/update_profile'

      responses:
        200:
          description: Возвращает изменённую информацию о пользователе
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/user_trainer'
                  - $ref: '#/components/schemas/user_customer'

  /profile/{entityId}:
    get:
      description: Информация о пользователе
      security:
        - BearerAuth: []

      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/entityId'

      responses:
        200:
          description: Возвращает информацию о пользователе
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/user_trainer'
                  - $ref: '#/components/schemas/user_customer'

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

        404:
          $ref: '#/components/responses/not_found_error'

  /profile/friends:
    get:
      description: Список друзей пользователя
      tags:
        - user
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/limit_query'
        - $ref: '#/components/parameters/page_query'
        - $ref: '#/components/parameters/sort_type_query'
        - $ref: '#/components/parameters/basic_sort_option_query'

      responses:
        200:
          description: Возвращает список друзей пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/user_trainer'
                    - $ref: '#/components/schemas/user_customer'

        401:
          $ref: '#/components/responses/unauthorized_error'

  /profile/add-friend/{entityId}:
    get:
      description: Добавление пользователя в друзья
      tags:
        - user
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/entityId'

      responses:
        200:
          description: Успешное добавление в друзья

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

        404:
          $ref: '#/components/responses/not_found_error'

  /profile/favorite-gym/{entityId}:
    patch:
      description: Добавление/удаление спортивного зала в избранные
      tags:
        - user
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/entityId'

      responses:
        200:
          description: Успешное добавление/удаление спортивного зала в избранное

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

  /profile/favorite-gym:
    get:
      description: Получить список избранных спортивных залов
      tags:
        - user
      security:
        - BearerAuth: []

      responses:
        200:
          description: Возвращает список избранных залов пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sport_gym'

        401:
          $ref: '#/components/responses/unauthorized_error'

  /workout:
    post:
      description: Создание тренировки
      security:
        - BearerAuth: []
      tags:
        - workout

      requestBody:
        description: Данные для создания тренировки
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/create_workout'

      responses:
        201:
          description: Возвращает информацию о новой тренировке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workout'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

    get:
      description: Список тренировок тренера
      security:
        - BearerAuth: []
      tags:
        - workout
      parameters:
        - $ref: '#/components/parameters/limit_query'
        - $ref: '#/components/parameters/page_query'
        - $ref: '#/components/parameters/sort_type_query'
        - $ref: '#/components/parameters/basic_sort_option_query'
        - $ref: '#/components/parameters/price_range_query'
        - $ref: '#/components/parameters/calories_range_query'
        - $ref: '#/components/parameters/rating_query'
        - $ref: '#/components/parameters/training_time_query'

      responses:
        200:
          description: Возвращает список тренировок тренера
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/workout'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

  /workout/{entityId}:
    patch:
      description: Редактирование данных о тренировке
      tags:
        - workout
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/entityId'

      requestBody:
        description: Данные для изменения
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/update_workout'

      responses:
        200:
          description: Возвращает обновлённые данные о тренировке

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

    get:
      description: Детальная информация о тренировка
      tags:
        - workout
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/entityId'

      responses:
        200:
          description: Возвращает детальную информацию о тренировке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workout'

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

        404:
          $ref: '#/components/responses/not_found_error'

  /order:
    post:
      description: Создание заказа
      security:
        - BearerAuth: []
      tags:
        - order

      requestBody:
        description: Данные для создания нового заказа
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_order'

      responses:
        201:
          description: Возвращает данные нового заказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

  /order/customer:
    get:
      description: Баланс пользователя
      tags:
        - order
      security:
        - BearerAuth: []

      responses:
        200:
          description: Возвращает количество купленных тренировок и абонементов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_balance'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

  /order/trainer:
    get:
      description: Список заказов на тренировки тренера
      tags:
        - order
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/limit_query'
        - $ref: '#/components/parameters/page_query'
        - $ref: '#/components/parameters/sort_type_query'
        - $ref: '#/components/parameters/order_sort_option_query'

      responses:
        200:
          description: Возвращает список заказов на тренировки тренера
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/orders_list'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

  /food-diary:
    post:
      description: Создание записи в дневнике тренировок
      tags:
        - food-diary
      security:
        - BearerAuth: []

      requestBody:
        description: Данные для создания записи в дневнике тренировок
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_food_diary'

      responses:
        201:
          description: Возвращает данные о новой записи в дневнике питания
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/food_diary'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

    get:
      description: Список записей из дневника питания пользователя
      tags:
        - food-diary
      security:
        - BearerAuth: []

      responses:
        200:
          description: Список записей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/food_diary'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

  /food-diary/{entityId}:
    get:
      description: Получение данных об одной записи из дневника питания
      tags:
        - food-diary
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/entityId'

      responses:
        200:
          description: Возвращает данные об одной записи
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/food_diary'

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

    patch:
      description: Изменить запись в дневнике питания
      tags:
        - food-diary
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/entityId'

      requestBody:
        description: Данные для изменения записи в дневике тренировок
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_food_diary'

      responses:
        200:
          description: Возвращает данные об изменённой записи
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/food_diary'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

    delete:
      description: Удаление записи из дневника тренировок
      tags:
        - food-diary
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/entityId'

      responses:
        200:
          description: Возвращает информацию об удалённой записи
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/food_diary'

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

  /notification:
    get:
      description: Список оповещений для пользователя
      tags:
        - notification
      security:
        - BearerAuth: []

      responses:
        200:
          description: Возвращает список оповещений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'

        401:
          $ref: '#/components/responses/unauthorized_error'

  /notification/{entityId}:
    delete:
      description: Удаление оповещения
      tags:
        - notification
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/entityId'

      responses:
        200:
          description: Возвращает информацию об удалённом оповещении
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notification'

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/foreign_entity_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

  /personal-training:
    post:
      description: Создать заявку на персональную тренировку
      tags:
        - personal-training
      security:
        - BearerAuth: []

      requestBody:
        description: Данные для создании заявки на персональную тренировку
        content:
          application/json:
            schema:
              type: object
              properties:
                conductorId:
                  description: ID исполнителя тренировки
              required:
                - conductorId

      responses:
        201:
          description: Информация о новой заявке на персональную тренировку
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personal_training'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

    patch:
      description: Изменить статус заявки
      tags:
        - personal-training
      security:
        - BearerAuth: []

      requestBody:
        description: Данные для изменения статуса заявки
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: ID заявки
                  type: number
                  example: 1

                status:
                  description: Новый статус заявки
                  type: string
                  enum:
                    - на рассмотрении
                    - отклонён
                    - принят
                  example: принят

              required:
                - id
                - status

      responses:
        200:
          description: Успешное изменение статуса заявки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personal_training'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

        409:
          $ref: '#/components/responses/conflict_error'

  /review:
    post:
      description: Создание нового отзыва
      tags:
        - review
      security:
        - BearerAuth: []

      requestBody:
        description: Данные для создания отзыва
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_review'

      responses:
        201:
          description: Возвращает данные о новом отзыве
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/review'

        400:
          $ref: '#/components/responses/bad_request_error_variable'

        401:
          $ref: '#/components/responses/unauthorized_error'

        403:
          $ref: '#/components/responses/role_forbidden_error'

        404:
          $ref: '#/components/responses/not_found_error'

  /review/{entityId}:
    get:
      description: Список отзывов для тренировки
      tags:
        - review
      security:
        - BearerAuth: []

      responses:
        200:
          description: Возвращает список отзывов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/review'

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

  /sport-gym:
    get:
      description: Список спортивных залов
      tags:
        - sport-gym
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/limit_query'
        - $ref: '#/components/parameters/page_query'
        - $ref: '#/components/parameters/sort_type_query'
        - $ref: '#/components/parameters/basic_sort_option_query'
        - $ref: '#/components/parameters/price_range_query'
        - $ref: '#/components/parameters/location_query'
        - $ref: '#/components/parameters/status_query'
        - $ref: '#/components/parameters/parameters_query'

      responses:
        200:
          description: Возвращает список залов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sport_gym'

        400:
          $ref: '#/components/responses/bad_request_error'

        401:
          $ref: '#/components/responses/unauthorized_error'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    register_user:
      type: object
      properties:
        email:
          description: Email пользователя
          type: string
          example: test@user.local

        password:
          description: Пароль пользователя
          type: string
          minLength: 6
          maxLength: 12
          example: secret

        role:
          description: Роль пользователя
          type: string
          enum:
            - пользователь
            - тренер
          example: пользователь

        name:
          description: Имя пользователя
          type: string
          minLength: 1
          maxLength: 15
          example: John

        gender:
          description: Пол пользователя
          type: string
          enum:
            - мужской
            - женский
            - неважно
          example: мужской

        birthDay:
          description: День рождения пользователя
          type: string
          example: '2000-01-01'

        location:
          description: Станция метро
          type: string
          enum:
            - Пионерская
            - Петроградская
            - Удельная
            - Звёздная
            - Спортивная
          example: Пионерская

        trainingLevel:
          description: Уровень подготовки
          type: string
          enum:
            - новичок
            - любитель
            - профессионал
          example: любитель

        trainingType:
          description: Тип тренировки
          type: array
          maxItems: 3
          items:
            type: string
            enum:
              - йога
              - бег
              - бокс
              - стрейчинг
              - кроссфит
              - аэробика
              - пилатес
          example: [йога, бег, бокс]

        trainingTime:
          description: Время на тренировку (обязательно для роли "Пользователь")
          type: string
          enum:
            - 10-30 мин
            - 30-50 мин
            - 50-80 мин
            - больше 80 мин
          example: 30-50 мин

        caloriesAmountToLose:
          description: Количество калорий для сброса (обязательно для роли "Пользователь")
          type: number
          minimum: 1000
          maximum: 5000
          example: 4500

        caloriesAmountToLosePerDay:
          description: Количество калорий для сброса в день (обязательно для роли "Пользователь")
          type: number
          minimum: 1000
          maximum: 5000
          example: 1200

        isReadyToTraining:
          description: Готовность к тренировке (обязательно для роли "Пользователь")
          type: boolean
          example: true

        resume:
          description: Заслуги тренера (для роли "Тренер")
          type: string
          minLength: 10
          maxLength: 140
          example: Lorem ipsum dolor sit amet

        isReadyToPersonalTraining:
          description: Готовность проводить персональные тренировки (для роли "Тренер")
          type: boolean
          example: true

        avatar:
          description: Фотография пользователя
          type: string
          format: binary

        certificate:
          description: Сертификат (для роли "Тренер")
          type: string
          format: binary

      required:
        - email
        - password
        - name
        - gender
        - role
        - location
        - trainingLevel
        - trainingType
        - avatar

    login_user:
      type: object
      properties:
        email:
          description: Email пользователя
          type: string
          example: test@user.local

        password:
          description: Пароль пользователя
          type: string
          minLength: 6
          maxLength: 12
          example: secret

    user_trainer:
      type: object
      properties:
        id:
          type: number
          example: 1

        email:
          type: string
          example: test@user.local

        role:
          type: string
          example: тренер

        profile:
          $ref: '#/components/schemas/profile_trainer'

    user_customer:
      type: object
      properties:
        id:
          type: number
          example: 1

        email:
          type: string
          example: test@user.local

        role:
          type: string
          example: пользователь

        profile:
          $ref: '#/components/schemas/profile_customer'

    update_profile:
      type: object
      properties:
        name:
          description: Имя пользователя

          type: string
          minLength: 1
          maxLength: 15
          example: John

        gender:
          description: Пол пользователя
          type: string
          enum:
            - мужской
            - женский
            - неважно
          example: мужской

        birthDay:
          description: День рождения пользователя
          type: string
          example: '2000-01-01'

        location:
          description: Станция метро
          type: string
          enum:
            - Пионерская
            - Петроградская
            - Удельная
            - Звёздная
            - Спортивная
          example: Пионерская

        trainingLevel:
          description: Уровень подготовки
          type: string
          enum:
            - новичок
            - любитель
            - профессионал
          example: любитель

        trainingType:
          description: Тип тренировки
          type: array
          maxItems: 3
          items:
            type: string
            enum:
              - йога
              - бег
              - бокс
              - стрейчинг
              - кроссфит
              - аэробика
              - пилатес
          example: [йога, бег, бокс]

        trainingTime:
          description: Время на тренировку (для роли "Пользователь")
          type: string
          enum:
            - 10-30 мин
            - 30-50 мин
            - 50-80 мин
            - больше 80 мин
          example: 30-50 мин

        caloriesAmountToLose:
          description: Количество калорий для сброса (для роли "Пользователь")
          type: number
          minimum: 1000
          maximum: 5000
          example: 4500

        caloriesAmountToLosePerDay:
          description: Количество калорий для сброса в день (для роли "Пользователь")
          type: number
          minimum: 1000
          maximum: 5000
          example: 1200

        isReadyToTraining:
          description: Готовность к тренировке (для роли "Пользователь")
          type: boolean
          example: true

        resume:
          description: Заслуги тренера (для роли "Тренер")
          type: string
          minLength: 10
          maxLength: 140
          example: Lorem ipsum dolor sit amet

        isReadyToPersonalTraining:
          description: Готовность проводить персональные тренировки (для роли "Тренер")
          type: boolean
          example: true

        avatar:
          description: Фотография пользователя
          type: string
          format: binary

        certificate:
          description: Сертификат (для роли "Тренер")
          type: string
          format: binary

    profile_trainer:
      type: object
      properties:
        name:
          type: string
          example: John

        avatar:
          type: string
          example: http://localhost:3333/upload/avatar/ZCCYl0fLXo_v4dSmigQOf.png

        gender:
          type: string
          example: мужской

        birthDay:
          type: string
          example: '2000-01-01T00:00:00.000Z'

        location:
          type: string
          example: Пионерская

        trainingLevel:
          type: string
          example: любитель

        trainingType:
          type: array
          items:
            type: string
          example:
            - йога
            - бег

        certificate:
          type: string
          example: http://localhost:3333/upload/certificate/0wG0yXjFGlQGYmASOoA7c.pdf

        resume:
          type: string
          example: Lorem ipsum dolor sit amet

        isReadyToPersonalTraining:
          type: boolean
          example: true

    profile_customer:
      type: object
      properties:
        name:
          type: string
          example: John

        avatar:
          type: string
          example: http://localhost:3333/upload/avatar/ZCCYl0fLXo_v4dSmigQOf.png

        gender:
          type: string
          example: мужской

        birthDay:
          type: string
          example: '2000-01-01T00:00:00.000Z'

        location:
          type: string
          example: Пионерская

        trainingLevel:
          type: string
          example: любитель

        trainingType:
          type: array
          items:
            type: string
          example:
            - йога
            - бег

        trainingTime:
          type: string
          example: 30-50 мин

        caloriesAmountToLose:
          type: number
          example: 4500

        caloriesAmountToLosePerDay:
          type: number
          example: 1200

        isReadyToTraining:
          type: boolean
          example: true

    tokens:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzIsImVtYWlsIjoidGVzdEB1c2VyLmxvY2FsIiwicm9sZSI6ItC_0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCIsImlhdCI6MTY3Nzk5OTMyNiwiZXhwIjoxNjc4MDAwMjI2fQ._T-muiMNosHmAASInSuTrPlK9Dv4vrMwT8_DUwck5GE

        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzIsImVtYWlsIjoidGVzdEB1c2VyLmxvY2FsIiwicm9sZSI6ItC_0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCIsImlhdCI6MTY3Nzk5OTM1MCwiZXhwIjoxNjc4NjA0MTUwfQ.urcErRpMvAv6rGTGMBL9yiHkIS39me0JU_zLgMEa8qs

    create_workout:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 15
          example: Lorem

        customerLevel:
          description: Уровень подготовки
          type: string
          enum:
            - новичок
            - любитель
            - профессионал
          example: любитель

        trainingType:
          description: Тип тренировки
          type: string
          enum:
            - йога
            - бег
            - бокс
            - стрейчинг
            - кроссфит
            - аэробика
            - пилатес
          example: бокс

        trainingTime:
          description: Время на тренировку
          type: string
          enum:
            - 10-30 мин
            - 30-50 мин
            - 50-80 мин
            - больше 80 мин
          example: 30-50 мин

        price:
          description: Цена
          type: number
          minimum: 0
          example: 50

        caloriesAmountToLose:
          description: Количество калорий для сброса
          type: number
          minimum: 1000
          maximum: 5000
          example: 4500

        description:
          description: Описание тренировки
          type: string
          minLength: 10
          maxLength: 140
          example: Lorem ipsum dolor si

        favorGender:
          description: Пол клиента, для которого предназначена тренировка
          type: string
          enum:
            - для женщин
            - для мужчин
            - для всех
          example: для мужчин

        isSpecial:
          description: Признак специального предложения
          type: boolean
          example: true

        video:
          description: Видео тренировки
          type: string
          format: binary

      required:
        - title
        - description
        - customerLevel
        - trainingType
        - trainingTime
        - price
        - caloriesAmountToLose
        - favorGender
        - video

    update_workout:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 15
          example: Lorem

        customerLevel:
          description: Уровень подготовки
          type: string
          enum:
            - новичок
            - любитель
            - профессионал
          example: любитель

        trainingType:
          description: Тип тренировки
          type: string
          enum:
            - йога
            - бег
            - бокс
            - стрейчинг
            - кроссфит
            - аэробика
            - пилатес
          example: бокс

        trainingTime:
          description: Время на тренировку
          type: string
          enum:
            - 10-30 мин
            - 30-50 мин
            - 50-80 мин
            - больше 80 мин
          example: 30-50 мин

        price:
          description: Цена
          type: number
          minimum: 0
          example: 50

        caloriesAmountToLose:
          description: Количество калорий для сброса
          type: number
          minimum: 1000
          maximum: 5000
          example: 4500

        description:
          description: Описание тренировки
          type: string
          minLength: 10
          maxLength: 140
          example: Lorem ipsum dolor si

        favorGender:
          description: Пол клиента, для которого предназначена тренировка
          type: string
          enum:
            - для женщин
            - для мужчин
            - для всех
          example: для мужчин

        isSpecial:
          description: Признак специального предложения
          type: boolean
          example: true

        video:
          description: Видео тренировки
          type: string
          format: binary

    workout:
      type: object
      properties:
        id:
          type: number
          example: 1

        title:
          type: string
          example: Lorem

        backgroundImage:
          type: string
          example: http://localhost:3333/workout-backgrounds/training-4.png

        customerLevel:
          type: string
          example: любитель

        trainingType:
          type: string
          example: бокс

        trainingTime:
          type: string
          example: 30-50 мин

        price:
          type: number
          example: 50

        caloriesAmountToLose:
          type: number
          example: 4500

        description:
          type: string
          example: Lorem ipsum dolor si

        favorGender:
          type: string
          example: для мужчин

        video:
          type: string
          example: http://localhost:3333/upload/video/ZPiStoC0BrHjevXtH0wgT.mp4

        rating:
          type: number
          example: 3

        trainer:
          $ref: '#/components/schemas/user_trainer'

        isSpecial:
          type: boolean
          example: true

    create_order:
      type: object
      properties:
        orderType:
          description: Тип заказа
          type: string
          enum:
            - тренировка
            - абонемент
          example: тренировка

        amount:
          type: number
          description: Количество
          minimum: 1
          example: 2

        paymentMethod:
          description: Вариант оплаты заказа
          type: string
          enum:
            - visa
            - mir
            - umoney
          example: visa

        purchaseId:
          description: Id тренировки или абонемента в зал
          type: number
          example: 1

    order:
      type: object
      properties:
        id:
          type: number
          example: 1

        user:
          $ref: '#/components/schemas/user_customer'

        orderType:
          type: string
          example: тренировка

        workout:
          $ref: '#/components/schemas/workout'

        price:
          type: number
          example: 50

        amount:
          type: number
          example: 2

        totalCost:
          type: number
          example: 1500

        paymentMethod:
          type: string
          example: mir

    orders_list:
      type: array
      items:
        type: object
        properties:
          workout:
            $ref: '#/components/schemas/order'

          count:
            type: number
            example: 4

          totalPrice:
            type: number
            example: 1200

    customer_balance:
      type: object
      properties:
        sportGym:
          type: number
          example: 1

        workout:
          type: number
          example: 7

    create_food_diary:
      type: object
      properties:
        caloriesAmount:
          type: number
          example: 200

        dateOfMeal:
          type: string
          example: '2000-01-01T00:00:00.000Z'

        typeOfMeal:
          type: string
          enum:
            - завтрак
            - обед
            - ужин
            - перекус
          example: обед

      required:
        - caloriesAmount
        - dateOfMeal
        - typeOfMeal

    food_diary:
      type: object
      properties:
        id:
          type: number
          example: 1

        user:
          $ref: '#/components/schemas/user_customer'

        caloriesAmount:
          type: number
          example: 200

        dateOfMeal:
          type: string
          example: '2000-01-01T00:00:00.000Z'

        typeOfMeal:
          type: string
          example: обед

    update_food_diary:
      type: object
      properties:
        caloriesAmount:
          type: number
          example: 200

        dateOfMeal:
          type: string
          example: '2000-01-01T00:00:00.000Z'

        typeOfMeal:
          type: string
          enum:
            - завтрак
            - обед
            - ужин
            - перекус
          example: обед

    notification:
      type: object
      properties:
        id:
          type: number
          example: 1

        userId:
          type: number
          example: 1

        text:
          type: string
          example: Пользователь добавил вас в друзья

        createdAt:
          type: string
          example: '2000-01-01T00:00:00.000Z'

    personal_training:
      type: object
      properties:
        id:
          type: number
          example: 1

        requesterId:
          type: number
          example: 1

        conductorId:
          type: number
          example: 2

        status:
          type: string
          enum:
            - на рассмотрении
            - отклонён
            - принят

        createdAt:
          type: string
          example: '2023-03-27T10:08:41.948Z'

        updatedAt:
          type: string
          example: '2023-03-27T10:08:41.948Z'

    sport_gym:
      type: object
      properties:
        id:
          type: number
          example: 1

        title:
          type: string
          example: Tasty Metal Soap

        location:
          type: string
          example: Петроградская

        isVerify:
          type: boolean
          example: true

        parameters:
          type: array
          items:
            type: string
          example:
            - бесплатная парковка
            - бассейн
            - массаж

        photos:
          type: array
          items:
            type: string
          example:
            - http://localhost:3333/sport-gym-photos/gym-01.jpg

        description:
          type: string
          example: Similique veniam iste. Dolores odio voluptate quae blanditiis natus animi hic.

        oneWorkoutPrice:
          type: number
          example: 3675

        createdAt:
          type: string
          example: '2023-03-27T10:08:40.166Z'

    create_review:
      type: object
      properties:
        workoutId:
          type: number
          example: 1

        rating:
          type: number
          example: 5

        text:
          type: string
          example: Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.

      required:
        - workoutId
        - rating
        - text

    review:
      type: object
      properties:
        id:
          type: number
          example: 1

        workout:
          $ref: '#/components/schemas/workout'

        rating:
          type: number
          example: 5

        text:
          type: string
          example: Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.

        createdAt:
          type: string
          example: '2023-03-28T05:15:54.473Z'

    error_bad_request_single:
      type: object
      properties:
        statusCode:
          type: number
          example: 400

        message:
          type: string
          example: Неверное ID. Должно быть целое число

        error:
          type: string
          example: Bad Request

    error_bad_request_array:
      type: object
      properties:
        statusCode:
          type: number
          example: 400

        message:
          type: array
          minItems: 1
          items:
            type: string
          example:
            - Неверный формат почты
            - Имя - обязательно для заполнения

        error:
          type: string
          example: Bad Request

  responses:
    conflict_error:
      description: Объект уже существует
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: number
                example: 409

              message:
                type: string
                example: Объект уже существует

              error:
                type: string
                example: Conflict

    bad_request_error_variable:
      description: Неверный запрос
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/error_bad_request_array'
              - $ref: '#/components/schemas/error_bad_request_single'

    bad_request_error:
      description: Неверный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_bad_request_single'

    not_found_error:
      description: Объект не найден
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: number
                example: '404'

              message:
                type: string
                example: Объект не найден

              error:
                type: string
                example: Not Found

    unauthorized_error:
      description: Пользователь не авторизован
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: number
                example: 401

              message:
                type: string
                example: Unauthorized

    foreign_entity_forbidden_error:
      description: Запрещены действия с чужими записями
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: number
                example: 403

              message:
                type: string
                example: Запрещены действия с чужими записями

              error:
                type: string
                example: Forbidden

    role_forbidden_error:
      description: Ресурс не доступен пользователю с данной ролью
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: number
                example: 403

              message:
                type: string
                example: Неверная роль пользователя

              error:
                type: string
                example: Forbidden

  parameters:
    entityId:
      in: path
      name: entityId
      description: Id пользователя, тренировки, заказа
      required: true
      schema:
        type: number
        example: 1

    limit_query:
      in: query
      name: limit
      description: Количество возвращаемых объектов
      allowEmptyValue: true
      schema:
        type: number
        default: 50
        example: 50

    page_query:
      in: query
      name: page
      description: Номер страницы пагинации
      allowEmptyValue: true
      schema:
        type: number
        default: 1
        example: 1

    sort_type_query:
      in: query
      name: sortType
      description: Направление сортировки
      allowEmptyValue: true
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
        example: desc

    basic_sort_option_query:
      in: query
      name: sortOption
      description: Параметр сортировки
      allowEmptyValue: true
      schema:
        type: string
        default: createdAt
        example: createdAt

    order_sort_option_query:
      in: query
      name: sortOption
      description: Параметр сортировки
      allowEmptyValue: true
      schema:
        type: string
        enum:
          - price
          - count
        default: price
        example: price

    price_range_query:
      in: query
      name: priceRange
      description: Диапазон цен
      allowEmptyValue: true
      schema:
        type: string
        example: 50,1000

    calories_range_query:
      in: query
      name: caloriesRange
      description: Диапазон калорий
      allowEmptyValue: true
      schema:
        type: string
        example: 1000,3000

    rating_query:
      in: query
      name: rating
      description: Рейтинг
      allowEmptyValue: true
      schema:
        type: number
        example: 3

    training_time_query:
      in: query
      name: trainingTime
      description: Время тренировки
      allowEmptyValue: true
      schema:
        type: string
        enum:
          - 10-30 мин
          - 30-50 мин
          - 50-80 мин
          - больше 80 мин
        example: 30-50 мин

    location_query:
      in: query
      name: location
      description: Локация
      allowEmptyValue: true
      schema:
        type: string
        enum:
          - Пионерская
          - Петроградская
          - Удельная
          - Звёздная
          - Спортивная
        example: Звёздная

    status_query:
      in: query
      name: status
      description: Статус спортивного зала
      allowEmptyValue: true
      schema:
        type: number
        enum:
          - 0
          - 1
        example: 1

    parameters_query:
      in: query
      name: parameters
      description: Дополнительные услуги
      allowEmptyValue: true
      schema:
        type: array
        items:
          type: string
          enum:
            - бассейн
            - бесплатная парковка
            - детская комната
            - массаж
          example:
            - бассейн
            - массаж
